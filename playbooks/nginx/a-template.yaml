---
- name: Setup Nginx reverse proxy with SSL
  hosts: all
  become: yes

  vars_files:
    - ports.yml

  vars:
    project_name: #PROJECT NAME FROM PORTS
    domain: "{{ projects[project_name].domain }}"
    nginx_port: "{{ projects[project_name].port }}"
    config_file: "/etc/nginx/conf.d/{{ domain }}.conf"

  tasks:
    - name: Check if Nginx is installed
      command: nginx -v
      register: nginx_check
      ignore_errors: yes
      changed_when: false

    - name: Fail if Nginx is not installed
      fail:
        msg: "Nginx is not installed. Run playbooks/nginx/install.yml first."
      when: nginx_check.rc != 0

    - name: Generate nginx config content
      set_fact:
        nginx_config_content: |
          # HTTP server (will later be upgraded to HTTPS by Certbot)
          server {
              listen 80;
              server_name {{ domain }};

              location / {
                  proxy_pass http://127.0.0.1:{{ nginx_port }};

                  # preserve original host & client info
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

                  # avoid redirect loops when SSL is added later
                  proxy_set_header X-Forwarded-Proto http;
                  proxy_set_header X-Forwarded-Port 80;

                  # websocket/long-poll stability (harmless if unused)
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection "upgrade";

                  proxy_read_timeout 3600s;
                  proxy_send_timeout 3600s;
              }
          }

    - name: Create Nginx proxy config
      shell: |
        cat > {{ config_file }} << 'NGINX_CONFIG_EOF'
        {{ nginx_config_content }}
        NGINX_CONFIG_EOF
        chown root:root {{ config_file }}
        chmod 0644 {{ config_file }}
      args:
        executable: /bin/bash
      notify: Reload Nginx

    - name: Test Nginx configuration
      command: nginx -t
      changed_when: false

    - name: Ensure Nginx is running
      systemd:
        name: nginx
        state: started
        enabled: yes

    - name: Check if Certbot is installed
      command: certbot --version
      register: certbot_check
      ignore_errors: yes
      changed_when: false

    - name: Install Certbot if not present
      apt:
        name:
          - certbot
          - python3-certbot-nginx
        state: present
        update_cache: yes
      when: certbot_check.rc != 0

    - name: Obtain SSL certificate with Certbot
      command: >
        certbot --nginx -d {{ domain }}
        --non-interactive
        --agree-tos
        --redirect
        --email {{ lookup('env', 'CERTBOT_EMAIL') | default('admin@' + domain, true) }}
      args:
        creates: /etc/letsencrypt/live/{{ domain }}/fullchain.pem

    - name: Set up automatic certificate renewal
      cron:
        name: "Certbot renewal"
        job: "certbot renew --quiet --post-hook 'systemctl reload nginx'"
        minute: "0"
        hour: "3"
        day: "*"
        month: "*"
        weekday: "*"
        user: root
        state: present

  handlers:
    - name: Reload Nginx
      systemd:
        name: nginx
        state: reloaded
